<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace = "com.pj.erp.persistence.HR_DAO">
	
	<insert id="insertMember" parameterType="com.pj.erp.vo.HR_VO">
		insert into users(username, password, e_name, e_gender, e_type, e_code, e_hp, e_address, e_mailcode, level_step, e_nfcCodeNFC, department_code, position_code, rank_code, start_date, enabled)
		values(#{username}, #{password}, #{e_name}, #{e_gender}, #{e_type}, #{e_code}, #{e_hp}, #{e_address}, #{e_mailcode}, #{level_step}, #{e_nfcCodeNFC}, #{department_code}, #{position_code}, #{rank_code}, #{start_date}, #{enabled}) 
	</insert>
	
	<!-- <insert id="insertMember2" parameterType="com.pj.erp.vo.HR_VO">
		insert into users(username, password, e_name, enabled)
		values(userid.nextval, #{password}, #{e_name}, 1) 
	</insert> -->
	
	<insert id="insertAuth">
		insert into authority(username, authority)
		values(userid.currval, 'ROLE_USER') 
	</insert>
	
	<!-- 사원번호 체크 -->
	<select id="userChk" resultType="int">
		SELECT COUNT(*) FROM physicaly_info_tbl WHERE username = #{username}
	</select>
	
	<select id="getUsername" resultType="String">
		select USERID.nextval from dual
	</select>
	
	<!-- 신체정보 등록 -->
	<insert id="insertPhysical" parameterType="String">
		insert into physicaly_info_tbl(username)
		values(#{username})
	</insert>
	
	<!-- 가족정보 등록 -->	
	<insert id="insertFamily" parameterType="com.pj.erp.vo.HR_FamilyVO">
		insert into family_info(username, f_name, f_type, f_born)
		values(#{username}, #{f_name}, #{f_type}, #{f_born})
	</insert>
	
	<!-- 부서 등록 -->
	<insert id="insertDepartment" parameterType="java.util.Map">
		insert into department_tbl(department_code, department_name)
		values(#{department_code}, #{department_name})
	</insert>	
	
	<!-- 사원 정보 -->
	<select id="foundation" resultType="com.pj.erp.vo.HR_VO">
		select * from users
	</select>
	
	<!-- 사원 정보 한건 -->
	<select id="getFoundation" parameterType="String" resultType="com.pj.erp.vo.HR_VO">
		select * from users where username = #{username}
	</select>
	
	<!-- 신체 정보 리스트 -->
	<select id="physicalyList" resultType="com.pj.erp.vo.HR_PhysicalVO">
		select * from physicaly_info_tbl
	</select>
	
	<!-- 신체 정보 한건 -->
	<select id="physicaly" parameterType="String" resultType="com.pj.erp.vo.HR_PhysicalVO">
		select * from physicaly_info_tbl where username =#{username}
	</select>
	
	<!-- 가족 정보 -->
	
	
	<!-- 사원 정보 수정 -->
	<update id="updateFoundation" parameterType="com.pj.erp.vo.HR_VO">
		update users set e_gender=#{e_gender}, e_type=#{e_type}, e_code=#{e_code}, e_hp=#{e_hp}, e_address=#{e_address}, e_mailcode=#{e_mailcode}, level_step=#{level_step}, e_nfcCodeNFC=#{e_nfcCodeNFC}, department_code=#{department_code}, position_code=#{position_code}, rank_code=#{rank_code} where username=#{username}
	</update>
	
	<!-- 신체 정보 상세페이지 -->
	<select id="getPhysicaly" parameterType="String" resultType="com.pj.erp.vo.HR_PhysicalVO">
		SELECT * FROM physicaly_info_tbl WHERE username = #{username}
	</select>
	
	<!-- 신체정보 수정처리 -->
	<update id="updatePhysicaly" parameterType="com.pj.erp.vo.HR_PhysicalVO">
		UPDATE physicaly_info_tbl SET e_height=#{e_height}, e_weight=#{e_weight}, e_left_sight=#{e_left_sight}, e_right_sight=#{e_right_sight}, e_color_blind=#{e_color_blind}, e_blood_type=#{e_blood_type}, e_blood_presure=#{e_blood_presure}, e_medical_info=#{e_medical_info}, e_veteran_type=#{e_veteran_type}, e_veteran_info=#{e_veteran_info}, e_veteran_level=#{e_veteran_level}, e_disability_type=#{e_disability_type}, e_disability_level=#{e_disability_level} WHERE username=#{username}
	</update>
	
	<!-- 부서 목록 -->
	<select id="getDepartmentList" parameterType="java.util.Map" resultType="com.pj.erp.vo.HR_VO">
		select department_code, department_name from department_tbl	 
	</select>
	
	<!-- 직책 목록 -->
	<select id="getPositionList" parameterType="java.util.Map" resultType="com.pj.erp.vo.HR_VO">
		select position_code from position_tbl
	</select>
	
	<!-- 직급 목록 -->
	<select id="getRankList" parameterType="java.util.Map" resultType="com.pj.erp.vo.HR_VO">
		select rank_code from rank_tbl
	</select>	
	
	<!-- 호봉테이블(랭크) -->	
	<select id="rank" resultType="com.pj.erp.vo.HR_RankVO">
		select * from rank_tbl
	</select>
	
	<!-- 호봉테이블(금액) -->
	<select id="pay" resultType="com.pj.erp.vo.HR_PaystepVO">
		select * from paystep_tbl
		Where rank_code = #{rank_code}
	</select>
	
	<!-- 호봉테이블(금액수정) -->
	<update id="updatePay" parameterType="com.pj.erp.vo.HR_PaystepVO">
		Update paystep_tbl
		Set BASE_PAYMENT = #{BASE_PAYMENT}, ADD_PAYMENT = #{ADD_PAYMENT}, EXTENSION_PAYMENT = #{EXTENSION_PAYMENT}
		Where paystep_code = #{paystep_code} And rank_code = #{rank_code}
	</update>
	
	<!-- 인사고과조회 -->
	<select id = "getGreeting" parameterType = "java.util.Map" resultType = "com.pj.erp.vo.HR_GreetingVO">
	<![CDATA[
		select pa_code, username, pa_date, pa_type, pa_name, department_Code, pa_details, detail_ac_code, pa_value, pa_other, jr_state  from getgreeting_view 
		where pa_code like '%'||#{pa_code}||'%' 
		and username like '%'||#{username}||'%' 
		and e_name like '%'||#{e_name}||'%' 
		and pa_date >= #{spa_date} and pa_date <= #{epa_date}
		]]>
	</select>
	
	<!-- 임금현황조회 -->
	<select id = "getSalary" parameterType = "java.util.Map" resultType = "com.pj.erp.vo.HR_SalaryVO">
	<![CDATA[
		select u.username, u.e_name, d.department_name, r.rank_name, u.start_date, p.base_payment, p.add_payment, p.extension_payment
		from users u ,department_tbl d ,rank_tbl r ,paystep_tbl p
		where u.department_code = d.department_code 
		and u.rank_code = r.rank_code
		and r.rank_code = p.rank_code
		and u.level_step = p.paystep_code
		and department_name like '%'||#{d_name}||'%'
		and e_name like '%'||#{e_name}||'%'
		]]>
	</select>
	
</mapper>