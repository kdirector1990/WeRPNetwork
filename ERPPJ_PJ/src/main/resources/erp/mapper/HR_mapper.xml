<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace = "com.pj.erp.persistence.HR_DAO">
	
	<insert id="insertMember" parameterType="com.pj.erp.vo.HR_VO">
		insert into users(username, password, e_name, e_gender, e_type, e_code, e_hp, e_address, e_mailcode, level_step, e_nfcCodeNFC, department_code, position_code, rank_code, start_date, enabled)
		values(#{username}, #{password}, #{e_name}, #{e_gender}, #{e_type}, #{e_code}, #{e_hp}, #{e_address}, #{e_mailcode}, #{level_step}, #{e_nfcCodeNFC}, #{department_code}, #{position_code}, #{rank_code}, #{start_date}, #{enabled}) 
	</insert>
	
	<insert id="insertMember2" parameterType="com.pj.erp.vo.HR_VO">
		insert into users(username, password, e_name, enabled, department_code, rank_code, position_code, level_step)
		values(userid.nextval, #{password}, #{e_name}, 1, 'plan_depart', '920', 'pos_1001', 1) 
	</insert>
	
	<insert id="insertAuth">
		insert into authority(username, authority)
		values(userid.currval, 'ROLE_ADMIN') 
	</insert>
	
	<!-- 사원번호 체크 -->
	<select id="userChk" resultType="int">
		SELECT COUNT(*) FROM physicaly_info_tbl WHERE username = #{username}
	</select>
	
	<select id="getUsername" resultType="String">
		select USERID.nextval from dual
	</select>
	
	<!-- 신체정보 등록 -->
	<insert id="insertPhysical" parameterType="String">
		insert into physicaly_info_tbl(username)
		values(#{username})
	</insert>
	
	<!-- 가족정보 등록 -->	
	<insert id="insertFamily" parameterType="com.pj.erp.vo.HR_FamilyVO">
		insert into family_info(username, f_name, f_type, f_born)
		values(#{username}, #{f_name}, #{f_type}, #{f_born})
	</insert>
	
	<!-- 부서 등록 -->
	<insert id="insertDepartment" parameterType="java.util.Map">
		insert into department_tbl(department_code, department_name)
		values(#{department_code}, #{department_name})
	</insert>	
	
	<!-- 사원 정보 -->
	<select id="foundation" resultType="com.pj.erp.vo.HR_VO">
		select * from users
	</select>
	
	<!-- 사원 정보 한건 -->
	<select id="getFoundation" parameterType="String" resultType="com.pj.erp.vo.HR_VO">
		select * from users where username = #{username}
	</select>
	
	<!-- 신체 정보 리스트 -->
	<select id="physicalyList" resultType="com.pj.erp.vo.HR_PhysicalVO">
		select * from physicaly_info_tbl
	</select>
	
	<!-- 신체 정보 한건 -->
	<select id="physicaly" parameterType="String" resultType="com.pj.erp.vo.HR_PhysicalVO">
		select * from physicaly_info_tbl where username =#{username}
	</select>
	
	<!-- 가족 정보 -->
	
	
	<!-- 사원 정보 수정 -->
	<update id="updateFoundation" parameterType="com.pj.erp.vo.HR_VO">
		update users set e_gender=#{e_gender}, e_type=#{e_type}, e_code=#{e_code}, e_hp=#{e_hp}, e_address=#{e_address}, e_mailcode=#{e_mailcode}, level_step=#{level_step}, e_nfcCodeNFC=#{e_nfcCodeNFC}, department_code=#{department_code}, position_code=#{position_code}, rank_code=#{rank_code} where username=#{username}
	</update>
	
	<!-- 	
	<select id="getPhysicaly" parameterType="String" resultType="com.pj.erp.vo.HR_PhysicalVO">
		SELECT * FROM physicaly_info_tbl WHERE username = #{username}
	</select> -->
	
	<!-- 신체정보 수정처리 -->
	<update id="updatePhysicaly" parameterType="com.pj.erp.vo.HR_PhysicalVO">
		UPDATE physicaly_info_tbl SET e_height=#{e_height}, e_weight=#{e_weight}, e_left_sight=#{e_left_sight}, e_right_sight=#{e_right_sight}, e_color_blind=#{e_color_blind}, e_blood_type=#{e_blood_type}, e_blood_presure=#{e_blood_presure}, e_medical_info=#{e_medical_info}, e_veteran_type=#{e_veteran_type}, e_veteran_info=#{e_veteran_info}, e_veteran_level=#{e_veteran_level}, e_disability_type=#{e_disability_type}, e_disability_level=#{e_disability_level} WHERE username=#{username}
	</update>
	
	<!-- 가족정보 가져오기 -->
	<select id="getFamily" parameterType="String" resultType="com.pj.erp.vo.HR_FamilyVO">
		select * from family_info where username = #{username}
	</select>
	
	<!-- 가족정보 수정처리 -->
	<update id="updateFamily" parameterType="com.pj.erp.vo.HR_FamilyVO">
		update family_info set f_name=#{f_name}, f_type=#{f_type}, f_cohabitation=#{f_cohabitation}, f_born=#{f_born}, f_born_type=#{f_born_type} where username=#{username}
	</update>
	
	<!-- 사원정보 조회  -->
	<select id ="getUsers" parameterType = "java.util.Map" resultType = "com.pj.erp.vo.HR_VO">
	<![CDATA[
		select username, e_name, e_gender, e_type, e_code, e_hp, e_address, e_mailcode, level_step, e_nfcCodeNFC, department_code, position_code, rank_code, start_date from users 
		where username like '%'||#{username}||'%' 
		and e_name like '%'||#{e_name}||'%' 
		and department_code like '%'||#{department_code}||'%' 
		and position_code like '%'||#{position_code}||'%'
		and rank_code like '%'||#{position_code}||'%'
		]]>
	</select>
	
	<!-- 사원신체정보 조회  -->
	<select id ="getPhysicaly" parameterType="java.util.Map" resultType="com.pj.erp.vo.HR_PhysicalVO">
	<![CDATA[
		select u.username, u.e_name, o.position_code, d.department_code, r.rank_code, p.e_height, p.e_weight, p.e_left_sight, p.e_right_sight, p.e_color_blind, p.e_blood_type, p.e_blood_presure, p.e_medical_info, p.e_veteran_type, p.e_veteran_info, p.e_veteran_level, p.e_disability_type, p.e_disability_level 
		from users u ,department_tbl d ,rank_tbl r , position_tbl o, physicaly_info_tbl p
		where u.department_code = d.department_code
		and u.rank_code = r.rank_code
		and u.position_code = o.position_code
		and username like '%'||#{username}||'%' 
		and e_name like '%'||#{e_name}||'%' 
		and department_code like '%'||#{department_code}||'%' 
		and position_code like '%'||#{position_code}||'%'
		and rank_code like '%'||#{rank_code}||'%'
	]]>
	</select>
	
	<!-- 검색 목록 가져오기 -->
	<select id="getUsernameList" resultType="com.pj.erp.vo.HR_VO" parameterType="String">
		select username, e_name, department_code, position_code from users where e_name like '%'||#{e_name}||'%'
	</select>
	
	<!-- 부서 목록 -->
	<select id="getDepartmentList" parameterType="java.util.Map" resultType="com.pj.erp.vo.HR_VO">
		select department_code, department_name from department_tbl	 
	</select>
	
	<!-- 직책 목록 -->
	<select id="getPositionList" parameterType="java.util.Map" resultType="com.pj.erp.vo.HR_VO">
		select position_code from position_tbl
	</select>
	
	<!-- 직급 목록 -->
	<select id="getRankList" parameterType="java.util.Map" resultType="com.pj.erp.vo.HR_VO">
		select rank_code from rank_tbl
	</select>	
	
	<!-- 호봉테이블(랭크) -->	
	<select id="rank" resultType="com.pj.erp.vo.HR_RankVO">
		select * from rank_tbl
	</select>
	
	<!-- 호봉테이블(금액) -->
	<select id="pay" resultType="com.pj.erp.vo.HR_PaystepVO">
		select * from paystep_tbl
		Where rank_code = #{rank_code}
	</select>
	
	<!-- 호봉테이블(금액수정) -->
	<update id="updatePay" parameterType="com.pj.erp.vo.HR_PaystepVO">
		Update paystep_tbl
		Set BASE_PAYMENT = #{BASE_PAYMENT}, ADD_PAYMENT = #{ADD_PAYMENT}, EXTENSION_PAYMENT = #{EXTENSION_PAYMENT}
		Where paystep_code = #{paystep_code} And rank_code = #{rank_code}
	</update>
	
	<!-- 인사고과조회 -->	
	<select id = "getGreeting" parameterType = "java.util.Map" resultType = "com.pj.erp.vo.HR_GreetingVO">
	<![CDATA[
		select pa_code, username, pa_date, pa_type, pa_name, department_Code, pa_details, detail_ac_code, pa_value, pa_other, jr_state  from getgreeting_view 
		where pa_code like '%'||#{pa_code}||'%' 
		and username like '%'||#{username}||'%' 
		and e_name like '%'||#{e_name}||'%' 
		and pa_date >= #{spa_date} and pa_date <= #{epa_date}
		]]>
	</select>
	
	<!-- 임금현황조회 -->
	<select id = "getSalary" parameterType = "java.util.Map" resultType = "com.pj.erp.vo.HR_SalaryVO">
	<![CDATA[
		select u.username, u.e_name, d.department_name, r.rank_name, u.start_date, p.base_payment, p.add_payment, p.extension_payment
		from users u ,department_tbl d ,rank_tbl r ,paystep_tbl p
		where u.department_code = d.department_code 
		and u.rank_code = r.rank_code
		and r.rank_code = p.rank_code
		and u.level_step = p.paystep_code
		and department_name like '%'||#{d_name}||'%'
		and e_name like '%'||#{e_name}||'%'
		]]>
	</select>
	
	<!-- 근태(사원정보 검색) -->
	<select id = "selectUserTime" parameterType = "java.util.Map" resultType = "com.pj.erp.vo.HR_Time_VO">
		select username, e_name, department_code, RowNum 
		From users
		where department_code like '%'||#{department_code}||'%' 
		and username like '%'||#{username}||'%' 
		and e_name like '%'||#{e_name}||'%' 
		Order by RowNum asc
	</select>
	
	<!-- 근태(출근입력) -->
	<insert id="StartWork" parameterType="String">
		Insert Into time_card_tbl(tc_code, username, tc_come_time)
		Values(lpad(STARTWORK.nextval,7,'TC_'), #{username}, sysdate)
	</insert>
	
	<!-- 근태(퇴근입력) -->
	<update id="EndWork" parameterType="String">
		Update time_card_tbl
		Set tc_leave_time = sysdate
		Where TO_Char(tc_come_time, 'YYYY-MM-DD') = to_char(sysdate, 'YYYY-MM-DD')
		And username = #{username}
	</update>
	
	
	<!-- 근속년수 검색 -->
	<select id = "getYearofservice" parameterType = "java.util.Map" resultType = "com.pj.erp.vo.HR_YearService_VO">
		select username, e_name, department_name, position_name , start_date, e_code
    		, trunc(trunc(months_between(to_date(#{day}),start_date),0)/12,0) as service_year
   			, mod(trunc(months_between(to_date(#{day}),start_date),0),12) as service_month
		from getyearsofservice_view 
		where username like '%'||#{username}||'%' 
		and department_name like '%'||#{department_name}||'%'
		<!-- and e_state_code like '%'||#{e_state_code}||'%' -->
	</select>
	
</mapper>